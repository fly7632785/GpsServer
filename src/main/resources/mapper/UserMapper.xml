<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jafir.springboot.service.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.jafir.springboot.service.model.User">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="gender" jdbcType="BIT" property="gender" />
    <result column="user_role" jdbcType="TINYINT" property="userRole" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="last_login_time" jdbcType="BIGINT" property="lastLoginTime" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, username, password, token, name, create_time, update_time, mobile, gender, user_role, 
    avatar, last_login_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jafir.springboot.service.model.User">
    insert into user (uid, username, password, 
      token, name, create_time, 
      update_time, mobile, gender, 
      user_role, avatar, last_login_time
      )
    values (#{uid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{token,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT}, #{mobile,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, 
      #{userRole,jdbcType=TINYINT}, #{avatar,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jafir.springboot.service.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=TINYINT},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jafir.springboot.service.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=TINYINT},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=BIGINT},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jafir.springboot.service.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      mobile = #{mobile,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      user_role = #{userRole,jdbcType=TINYINT},
      avatar = #{avatar,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=BIGINT}
    where uid = #{uid,jdbcType=BIGINT}
  </update>

  <select id="getUsers" resultType="com.jafir.springboot.service.model.result.AllUserResult">
    SELECT * FROM user
  </select>

  <select id="getUserByName" resultType="com.jafir.springboot.service.model.User">
    SELECT * FROM user where username = #{0}
  </select>


</mapper>